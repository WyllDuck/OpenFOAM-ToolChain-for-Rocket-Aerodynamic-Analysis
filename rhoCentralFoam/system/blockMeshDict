/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \    /   O peration     | Version:  v1806/v10                             |
|   \  /    A nd           | Web:      https://www.OpenFOAM.com              |
|    \/     M anipulation  |           https://www.OpenFOAM.org              |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

geometry
{
	sphere_0
	{
		type   searchableSphere;
		origin (0 0 0);
		centre (0 0 0);
		radius 1.6;
	}
	sphere_1
	{
		type   searchableSphere;
		origin (0 0 0);
		centre (0 0 0);
		radius 0.060000000000000005;
	}
	sphere_2
	{
		type   searchableSphere;
		origin (0 0 0);
		centre (0 0 0);
		radius 0.05;
	}
};

vertices
(
	(-3.00000000 -3.00000000 -3.00000000) // 0
	(-0.92376043 -3.00000000 -3.00000000) // 1
	(-0.92376043 -0.92376043 -3.00000000) // 2
	(-3.00000000 -0.92376043 -3.00000000) // 3
	(-3.00000000 -3.00000000 -0.92376043) // 4
	(-0.92376043 -3.00000000 -0.92376043) // 5
	(-0.92376043 -0.92376043 -0.92376043) // 6
	(-3.00000000 -0.92376043 -0.92376043) // 7
	(0.92376043 -3.00000000 -3.00000000) // 8
	(0.92376043 -0.92376043 -3.00000000) // 9
	(0.92376043 -3.00000000 -0.92376043) // 10
	(0.92376043 -0.92376043 -0.92376043) // 11
	(7.00000000 -3.00000000 -3.00000000) // 12
	(7.00000000 -0.92376043 -3.00000000) // 13
	(7.00000000 -3.00000000 -0.92376043) // 14
	(7.00000000 -0.92376043 -0.92376043) // 15
	(-0.92376043 0.92376043 -3.00000000) // 16
	(-3.00000000 0.92376043 -3.00000000) // 17
	(-0.92376043 0.92376043 -0.92376043) // 18
	(-3.00000000 0.92376043 -0.92376043) // 19
	(0.92376043 0.92376043 -3.00000000) // 20
	(0.92376043 0.92376043 -0.92376043) // 21
	(7.00000000 0.92376043 -3.00000000) // 22
	(7.00000000 0.92376043 -0.92376043) // 23
	(-0.92376043 3.00000000 -3.00000000) // 24
	(-3.00000000 3.00000000 -3.00000000) // 25
	(-0.92376043 3.00000000 -0.92376043) // 26
	(-3.00000000 3.00000000 -0.92376043) // 27
	(0.92376043 3.00000000 -3.00000000) // 28
	(0.92376043 3.00000000 -0.92376043) // 29
	(7.00000000 3.00000000 -3.00000000) // 30
	(7.00000000 3.00000000 -0.92376043) // 31
	(-3.00000000 -3.00000000 0.92376043) // 32
	(-0.92376043 -3.00000000 0.92376043) // 33
	(-0.92376043 -0.92376043 0.92376043) // 34
	(-3.00000000 -0.92376043 0.92376043) // 35
	(0.92376043 -3.00000000 0.92376043) // 36
	(0.92376043 -0.92376043 0.92376043) // 37
	(7.00000000 -3.00000000 0.92376043) // 38
	(7.00000000 -0.92376043 0.92376043) // 39
	(-0.92376043 0.92376043 0.92376043) // 40
	(-3.00000000 0.92376043 0.92376043) // 41
	(7.00000000 0.92376043 0.92376043) // 42
	(0.92376043 0.92376043 0.92376043) // 43
	(-0.92376043 3.00000000 0.92376043) // 44
	(-3.00000000 3.00000000 0.92376043) // 45
	(0.92376043 3.00000000 0.92376043) // 46
	(7.00000000 3.00000000 0.92376043) // 47
	(-3.00000000 -3.00000000 3.00000000) // 48
	(-0.92376043 -3.00000000 3.00000000) // 49
	(-0.92376043 -0.92376043 3.00000000) // 50
	(-3.00000000 -0.92376043 3.00000000) // 51
	(0.92376043 -3.00000000 3.00000000) // 52
	(0.92376043 -0.92376043 3.00000000) // 53
	(7.00000000 -3.00000000 3.00000000) // 54
	(7.00000000 -0.92376043 3.00000000) // 55
	(-0.92376043 0.92376043 3.00000000) // 56
	(-3.00000000 0.92376043 3.00000000) // 57
	(0.92376043 0.92376043 3.00000000) // 58
	(7.00000000 0.92376043 3.00000000) // 59
	(-0.92376043 3.00000000 3.00000000) // 60
	(-3.00000000 3.00000000 3.00000000) // 61
	(0.92376043 3.00000000 3.00000000) // 62
	(7.00000000 3.00000000 3.00000000) // 63
	(-0.03464102 -0.03464102 -0.03464102) // 64
	(0.03464102 -0.03464102 -0.03464102) // 65
	(0.03464102 0.03464102 -0.03464102) // 66
	(-0.03464102 0.03464102 -0.03464102) // 67
	(-0.03464102 -0.03464102 0.03464102) // 68
	(0.03464102 -0.03464102 0.03464102) // 69
	(-0.03464102 0.03464102 0.03464102) // 70
	(0.03464102 0.03464102 0.03464102) // 71
	(-0.02886751 -0.02886751 -0.02886751) // 72
	(0.02886751 -0.02886751 -0.02886751) // 73
	(0.02886751 0.02886751 -0.02886751) // 74
	(-0.02886751 0.02886751 -0.02886751) // 75
	(-0.02886751 -0.02886751 0.02886751) // 76
	(0.02886751 -0.02886751 0.02886751) // 77
	(-0.02886751 0.02886751 0.02886751) // 78
	(0.02886751 0.02886751 0.02886751) // 79
);

blocks
(
	hex ( 0 1 2 3 4 5 6 7 )  ( 21 21 21 ) simpleGrading ( 1 1 1 ) // 0 
	hex ( 1 8 9 2 5 10 11 6 )  ( 25 21 21 ) simpleGrading ( 1 1 1 ) // 1 
	hex ( 8 12 13 9 10 14 15 11 )  ( 61 21 21 ) simpleGrading ( 1 1 1 ) // 2 
	hex ( 3 2 16 17 7 6 18 19 )  ( 21 25 21 ) simpleGrading ( 1 1 1 ) // 3 
	hex ( 2 9 20 16 6 11 21 18 )  ( 25 25 21 ) simpleGrading ( 1 1 1 ) // 4 
	hex ( 9 13 22 20 11 15 23 21 )  ( 61 25 21 ) simpleGrading ( 1 1 1 ) // 5 
	hex ( 17 16 24 25 19 18 26 27 )  ( 21 21 21 ) simpleGrading ( 1 1 1 ) // 6 
	hex ( 16 20 28 24 18 21 29 26 )  ( 25 21 21 ) simpleGrading ( 1 1 1 ) // 7 
	hex ( 20 22 30 28 21 23 31 29 )  ( 61 21 21 ) simpleGrading ( 1 1 1 ) // 8 
	hex ( 4 5 6 7 32 33 34 35 )  ( 21 21 25 ) simpleGrading ( 1 1 1.0 ) // 9 
	hex ( 5 10 11 6 33 36 37 34 )  ( 25 21 25 ) simpleGrading ( 1 1 1.0 ) // 10 
	hex ( 10 14 15 11 36 38 39 37 )  ( 61 21 25 ) simpleGrading ( 1 1 1.0 ) // 11 
	hex ( 7 6 18 19 35 34 40 41 )  ( 21 25 25 ) simpleGrading ( 1 1 1.0 ) // 12 
	hex ( 11 15 23 21 37 39 42 43 )  ( 61 25 25 ) simpleGrading ( 1 1.0 1.0 ) // 13 
	hex ( 19 18 26 27 41 40 44 45 )  ( 21 21 25 ) simpleGrading ( 1 1 1.0 ) // 14 
	hex ( 18 21 29 26 40 43 46 44 )  ( 25 21 25 ) simpleGrading ( 1 1 1.0 ) // 15 
	hex ( 21 23 31 29 43 42 47 46 )  ( 61 21 25 ) simpleGrading ( 1 1 1.0 ) // 16 
	hex ( 32 33 34 35 48 49 50 51 )  ( 21 21 21 ) simpleGrading ( 1 1 1 ) // 17 
	hex ( 33 36 37 34 49 52 53 50 )  ( 25 21 21 ) simpleGrading ( 1 1 1 ) // 18 
	hex ( 36 38 39 37 52 54 55 53 )  ( 61 21 21 ) simpleGrading ( 1 1 1 ) // 19 
	hex ( 35 34 40 41 51 50 56 57 )  ( 21 25 21 ) simpleGrading ( 1 1 1 ) // 20 
	hex ( 34 37 43 40 50 53 58 56 )  ( 25 25 21 ) simpleGrading ( 1 1 1 ) // 21 
	hex ( 37 39 42 43 53 55 59 58 )  ( 61 25 21 ) simpleGrading ( 1 1 1 ) // 22 
	hex ( 41 40 44 45 57 56 60 61 )  ( 21 21 21 ) simpleGrading ( 1 1 1 ) // 23 
	hex ( 40 43 46 44 56 58 62 60 )  ( 25 21 21 ) simpleGrading ( 1 1 1 ) // 24 
	hex ( 43 42 47 46 58 59 63 62 )  ( 61 21 21 ) simpleGrading ( 1 1 1 ) // 25 
	hex ( 6 11 21 18 64 65 66 67 )  ( 25 25 71 ) simpleGrading ( 1 1 0.01 ) // 26 
	hex ( 34 37 11 6 68 69 65 64 )  ( 25 25 71 ) simpleGrading ( 1 1 0.01 ) // 27 
	hex ( 34 6 18 40 68 64 67 70 )  ( 25 25 71 ) simpleGrading ( 1 1 0.01 ) // 28 
	hex ( 43 21 11 37 71 66 65 69 )  ( 25 25 71 ) simpleGrading ( 1 1 0.01 ) // 29 
	hex ( 18 21 43 40 67 66 71 70 )  ( 25 25 71 ) simpleGrading ( 1 1 0.01 ) // 30 
	hex ( 40 43 37 34 70 71 69 68 )  ( 25 25 71 ) simpleGrading ( 1 1 0.01 ) // 31 
	hex ( 64 65 66 67 72 73 74 75 )  ( 25 25 31 ) simpleGrading ( 1 1 0.05 ) // 32 
	hex ( 68 69 65 64 76 77 73 72 )  ( 25 25 31 ) simpleGrading ( 1 1 0.05 ) // 33 
	hex ( 68 64 67 70 76 72 75 78 )  ( 25 25 31 ) simpleGrading ( 1 1 0.05 ) // 34 
	hex ( 71 66 65 69 79 74 73 77 )  ( 25 25 31 ) simpleGrading ( 1 1 0.05 ) // 35 
	hex ( 67 66 71 70 75 74 79 78 )  ( 25 25 31 ) simpleGrading ( 1 1 0.05 ) // 36 
	hex ( 70 71 69 68 78 79 77 76 )  ( 25 25 31 ) simpleGrading ( 1 1 0.05 ) // 37 
);

edges
(
	project 6 11 (sphere_0)
	project 6 18 (sphere_0)
	project 11 21 (sphere_0)
	project 21 18 (sphere_0)
	project 11 37 (sphere_0)
	project 6 34 (sphere_0)
	project 37 34 (sphere_0)
	project 18 40 (sphere_0)
	project 34 40 (sphere_0)
	project 21 43 (sphere_0)
	project 37 43 (sphere_0)
	project 40 43 (sphere_0)
	project 64 65 (sphere_1)
	project 64 67 (sphere_1)
	project 65 66 (sphere_1)
	project 66 67 (sphere_1)
	project 68 69 (sphere_1)
	project 68 64 (sphere_1)
	project 69 65 (sphere_1)
	project 68 70 (sphere_1)
	project 67 70 (sphere_1)
	project 71 66 (sphere_1)
	project 71 69 (sphere_1)
	project 71 70 (sphere_1)
	project 72 73 (sphere_2)
	project 72 75 (sphere_2)
	project 73 74 (sphere_2)
	project 74 75 (sphere_2)
	project 76 77 (sphere_2)
	project 76 72 (sphere_2)
	project 77 73 (sphere_2)
	project 76 78 (sphere_2)
	project 75 78 (sphere_2)
	project 79 74 (sphere_2)
	project 79 77 (sphere_2)
	project 79 78 (sphere_2)
);

faces
(
	project (6 11 21 18) sphere_0
	project (34 37 11 6) sphere_0
	project (34 6 18 40) sphere_0
	project (37 11 21 43) sphere_0
	project (40 43 21 18) sphere_0
	project (34 37 43 40) sphere_0
	project (64 65 66 67) sphere_1
	project (68 69 65 64) sphere_1
	project (68 64 67 70) sphere_1
	project (71 66 65 69) sphere_1
	project (67 66 71 70) sphere_1
	project (70 71 69 68) sphere_1
	project (72 73 74 75) sphere_2
	project (76 77 73 72) sphere_2
	project (76 72 75 78) sphere_2
	project (79 74 73 77) sphere_2
	project (75 74 79 78) sphere_2
	project (78 79 77 76) sphere_2
);

boundary
(
	inlet
	{
		type patch;
		faces
		(
			(4 0 3 7)
			(7 3 17 19)
			(19 17 25 27)
			(32 4 7 35)
			(35 7 19 41)
			(41 19 27 45)
			(48 32 35 51)
			(51 35 41 57)
			(57 41 45 61)
		);
	}
	outlet
	{
		type patch;
		faces
		(
			(14 12 13 15)
			(15 13 22 23)
			(23 22 30 31)
			(38 14 15 39)
			(39 15 23 42)
			(42 23 31 47)
			(54 38 39 55)
			(55 39 42 59)
			(59 42 47 63)
		);
	}
	sphere
	{
		type patch;
		faces
		(
			(72 73 74 75)
			(76 77 73 72)
			(76 72 75 78)
			(79 74 73 77)
			(75 74 79 78)
			(78 79 77 76)
		);
	}
);

defaultPatch
{
	name sides;
	type wall;
}

mergePatchPairs
(
);

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// Created with classy_blocks: https://github.com/damogranlabs/classy_blocks //
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
